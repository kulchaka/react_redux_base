{"version":3,"sources":["redux/types.js","components/Likes.jsx","redux/actions.js","components/Title.jsx","components/SingleComment.jsx","components/Comments.jsx","App.js","redux/likesReducer.js","redux/inputReducer.js","redux/commentsReducer.js","redux/rootReducer.js","index.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENT_CREATE","COMMENT_UPDATE","COMMENT_DELETE","connect","state","likes","likesReducer","dispatch","onIncrementLikes","type","onDecrementLikes","props","className","onClick","Title","useDispatch","text","useSelector","inputReducer","onChange","event","inputText","target","value","placeholder","SingleComment","data","id","useState","commentText","setCommentText","useEffect","onSubmit","preventDefault","commentUpdate","commentDelete","hidden","Comments","textComment","setTextComment","comments","commentsReducer","console","log","uniqid","commentCreate","map","el","App","src","alt","initialState","rootReducer","combineReducers","action","indexItem","findIndex","editedComments","slice","newArr","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bbddda4.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT'\nexport const DECREMENT = 'DECREMENT'\nexport const INPUT_TEXT = 'INPUT_TEXT'\nexport const COMMENT_CREATE = 'COMMENT_CREATE'\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE'\nexport const COMMENT_DELETE = 'COMMENT_DELETE'","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {decrementLikes, incrementLikes} from \"../redux/actions\";\n\nconst Likes = (props) => {\n  return (\n      <div>\n        <div className=\"button-controls\">\n          <button\n              onClick={props.onIncrementLikes}\n          >\n            👍🏻 {props.likes}\n          </button>\n          <button onClick={props.onDecrementLikes}>👎🏻</button>\n        </div>\n      </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const {likesReducer} = state\n  return {\n    likes: likesReducer.likes\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onIncrementLikes: () => dispatch(incrementLikes()),\n    onDecrementLikes: () => dispatch(decrementLikes())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);","import {COMMENT_CREATE, COMMENT_DELETE, COMMENT_UPDATE, DECREMENT, INCREMENT, INPUT_TEXT} from \"./types\";\n\nexport const incrementLikes = () => {\n  return {\n    type: INCREMENT\n  }\n}\n\nexport const decrementLikes = () => {\n  return {\n    type: DECREMENT\n  }\n}\n\nexport const inputText = (text) => {\n  return {\n    type: INPUT_TEXT,\n    text: text\n  }\n}\n\nexport const commentCreate = (id, text) => {\n  return {\n    type: COMMENT_CREATE,\n    data: {\n      id,\n      text\n    }\n  }\n}\n\nexport const commentUpdate = (id, text) => {\n  return {\n    type: COMMENT_UPDATE,\n    data: {\n      id,\n      text\n    }\n  }\n}\n\nexport const commentDelete = (id) => {\n  return {\n    type: COMMENT_DELETE,\n    id\n  }\n}","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {inputText} from \"../redux/actions\";\n\nconst Title = () => {\n\n  const dispatch = useDispatch()\n\n  const handleChange = (event) => {\n    dispatch(inputText(event.target.value))\n  }\n\n  const text = useSelector(state => state.inputReducer.text)\n\n  return (\n      <div className=\"card-title\">\n        <div className=\"card-title-top\">\n          <input\n              type=\"text\"\n              onChange={handleChange}\n              placeholder=\"enter text\"\n          />\n        </div>\n        <p>{text}</p>\n      </div>\n  );\n};\n\nexport default Title;","import React, {useEffect, useState} from 'react';\nimport {commentDelete, commentUpdate} from \"../redux/actions\";\nimport {useDispatch} from \"react-redux\";\n\nconst SingleComment = ({data}) => {\n  const {id, text} = data\n  const [commentText, setCommentText] = useState('')\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if(text) {\n      setCommentText(text)\n    }\n  }, [text])\n\n  const handleCommentText = (event) => {\n    setCommentText(event.target.value)\n  }\n\n  const handleUpdate = (event) => {\n    event.preventDefault()\n    dispatch(commentUpdate(id, commentText))\n  }\n\n  const handleDelete = () => {\n    dispatch(commentDelete(id))\n  }\n\n  return (\n      <form onSubmit={handleUpdate} className=\"comments-item\">\n        <div onClick={handleDelete} className=\"comments-item-delete\">\n          &times;\n        </div>\n        <input type=\"text\" value={commentText} onChange={handleCommentText}/>\n        <input type=\"submit\" hidden/>\n      </form>\n  );\n};\n\nexport default SingleComment;","import React, {useState} from 'react';\nimport SingleComment from \"./SingleComment\";\nimport uniqid from \"uniqid\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {commentCreate} from \"../redux/actions\";\n\nconst Comments = (props) => {\n\n  const [textComment, setTextComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const comments = useSelector(state => {\n    const {commentsReducer} = state\n    console.log(commentsReducer.comments)\n    return commentsReducer.comments\n  })\n\n  const handleInput = (event) => {\n    setTextComment(event.target.value)\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const id = uniqid()\n    dispatch(commentCreate(id, textComment))\n    setTextComment('')\n  }\n\n  return (\n      <div className=\"card-comments\">\n        <form\n            onSubmit={handleSubmit}\n            className=\"comments-item-create\"\n        >\n          <input\n              onChange={handleInput}\n              type=\"text\"\n              value={textComment}\n              placeholder=\"add comment\"\n          />\n          <input type=\"submit\" hidden/>\n        </form>\n        {comments && comments.map(el => {\n          return <SingleComment data={el} key={el.id}/>\n        })}\n      </div>\n  );\n};\n\nexport default Comments;","import './App.css';\nimport Likes from \"./components/Likes\";\nimport Title from \"./components/Title\";\nimport Comments from \"./components/Comments\";\n\nconst App = () => {\n  return (\n      <div className=\"App\">\n        <div className=\"wrap\">\n          <div className=\"card\">\n            <div className=\"card-image\">\n              <img src=\"./sea.jpg\" alt=\"surfing\"/>\n              <Title/>\n              <Likes/>\n            </div>\n            <Comments/>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","import {DECREMENT, INCREMENT} from \"./types\";\n\nconst initialState = {\n  likes: 0\n}\n\nexport const likesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        ...state,\n        likes: state.likes + 1\n      }\n    case DECREMENT:\n      return {\n        ...state,\n        likes: state.likes - 1\n      }\n    default:\n      return state\n  }\n}","import {INPUT_TEXT} from \"./types\";\n\nconst initialState = {\n  text: ''\n}\n\nexport const inputReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INPUT_TEXT:\n      return {\n        ...state,\n        text: action.text\n      }\n    default:\n      return state\n  }\n}","import {COMMENT_CREATE, COMMENT_DELETE, COMMENT_UPDATE} from \"./types\";\n\nconst initialState = {\n  comments: []\n}\n\nexport const commentsReducer = (state = initialState, action) => {\n  console.log('action state', action)\n  console.log('state', state)\n  switch (action.type) {\n    case COMMENT_CREATE:\n      return {\n        ...state,\n        comments: [...state.comments, action.data]\n      }\n    case COMMENT_UPDATE:\n      const {data} = action\n      const {comments} = state\n      const indexItem = comments.findIndex(el => el.id === data.id)\n      const editedComments = [\n        ...comments.slice(0, indexItem),\n        data,\n        ...comments.slice(indexItem + 1)\n      ]\n      return {\n        ...state,\n        comments: editedComments\n      }\n    case COMMENT_DELETE:\n      const newArr = state.comments.filter(el => el.id !== action.id)\n      return {\n        ...state,\n        comments: newArr\n      }\n    default:\n      return state\n  }\n}","import {combineReducers} from \"redux\";\nimport {likesReducer} from \"./likesReducer\";\nimport {inputReducer} from \"./inputReducer\";\nimport {commentsReducer} from \"./commentsReducer\";\n\nexport const rootReducer = combineReducers({\n  likesReducer,\n  inputReducer,\n  commentsReducer\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {createStore} from \"redux\";\nimport {rootReducer} from \"./redux/rootReducer\";\nimport {Provider} from \"react-redux\";\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n    <Provider store={store}>\n      <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}